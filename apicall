import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

public class CoalesceExample {
    public static void main(String[] args) throws Exception {
        // Example JSON
        String jsonData = "{ }"; // Adjust JSON here to test various scenarios

        // Parse the JSON data
        ObjectMapper objectMapper = new ObjectMapper();
        JsonNode rootNode = objectMapper.readTree(jsonData);

        // Extract values from "after" and "before", handling missing fields
        String custId = coalesce(
            getJsonValue(rootNode, "$.after.CUST_ID_NO"),
            getJsonValue(rootNode, "$.before.CUST_ID_NO")
        );

        System.out.println("CUST_ID: " + (custId != null ? custId : "null"));
    }

    // Helper method to get value from JSON based on the path, with null safety
    private static String getJsonValue(JsonNode rootNode, String jsonPath) {
        try {
            switch (jsonPath) {
                case "$.after.CUST_ID_NO":
                    return rootNode.path("after").path("CUST_ID_NO").asText(null);
                case "$.before.CUST_ID_NO":
                    return rootNode.path("before").path("CUST_ID_NO").asText(null);
                default:
                    return null;
            }
        } catch (Exception e) {
            return null;
        }
    }

    // Coalesce method to return the first non-null value
    @SafeVarargs
    private static <T> T coalesce(T... values) {
        for (T value : values) {
            if (value != null) {
                return value;
            }
        }
        return null;
    }
}
