
WITH nrt_asof_yday AS (
SELECT DISTINCT custid, acctnum, mtn, acctseqlineid
FROM `project.dataset.nrt_table`
WHERE DATE(event_ts) < CURRENT_DATE() -- exclude today's NRT updates
),
batch_latest AS (
SELECT DISTINCT custid, acctnum, mtn, acctseqlineid
FROM `project.dataset.batch_table`
)
SELECT
COALESCE(b.custid, n.custid) AS custid,
COALESCE(b.acctnum, n.acctnum) AS acctnum,
COALESCE(b.mtn, n.mtn) AS mtn,
COALESCE(b.acctseqlineid, n.acctseqlineid) AS acctseqlineid,
CASE
WHEN b.custid IS NULL THEN 'ONLY_IN_NRT_ASOF_YDAY'
WHEN n.custid IS NULL THEN 'ONLY_IN_BATCH_TODAY'
ELSE 'IN_BOTH'
END AS presence_status
FROM batch_latest b
FULL OUTER JOIN nrt_asof_yday n
USING (custid, acctnum, mtn, acctseqlineid)
WHERE b.custid IS NULL OR n.custid IS NULL;

Got it — you want only the keys that were in NRT as-of yesterday but are missing in today’s Batch (no counts, no “today” NRT). Here’s the minimal query:

-- Keys present in NRT (as of end of yesterday) but NOT in today's Batch
WITH nrt_asof_yday AS (
  SELECT DISTINCT custid, acctnum, mtn, acctseqlineid
  FROM `project.dataset.nrt_table`
  WHERE DATE(event_ts, "America/Chicago") < CURRENT_DATE("America/Chicago")  -- exclude today's NRT
),
batch_latest AS (
  SELECT DISTINCT custid, acctnum, mtn, acctseqlineid
  FROM `project.dataset.batch_table`
)
SELECT
  n.custid, n.acctnum, n.mtn, n.acctseqlineid
FROM nrt_asof_yday n
LEFT JOIN batch_latest b
USING (custid, acctnum, mtn, acctseqlineid)
WHERE b.custid IS NULL;
With the toy data from before, this returns:
custid

acctnum

mtn

acctseqlineid

C4

A400

M444

L4




Got it. If the batch table has no update/event timestamp, you can still avoid same-day false positives by:

Filtering NRT to exclude today’s rows (use its event/update timestamp), and

Not filtering Batch at all (treat it as the latest snapshot).



Below are ready BigQuery templates for both levels.

Row 7 — Line level (custid, acctnum, mtn, acctseqlineid)
-- Compare today's Batch snapshot vs NRT as-of yesterday
WITH nrt_asof_yday AS (
  SELECT
    custid, acctnum, mtn, acctseqlineid,
    TO_HEX(MD5(TO_JSON_STRING(STRUCT(
      -- put business (non-key) columns here, same list/order as below
      plan_id, plan_name, plan_status, start_date, end_date, balance_amt, credit_limit
    )))) AS nrt_hash
  FROM `project.dataset.nrt_table`
  WHERE DATE(event_ts) < CURRENT_DATE()           -- exclude today's NRT updates
),
batch_latest AS (
  SELECT
    custid, acctnum, mtn, acctseqlineid,
    TO_HEX(MD5(TO_JSON_STRING(STRUCT(
      -- same business (non-key) columns; same order
      plan_id, plan_name, plan_status, start_date, end_date, balance_amt, credit_limit
    )))) AS batch_hash
  FROM `project.dataset.batch_table`              -- no date filter (no ts in batch)
)
SELECT COUNT(*) AS diff_count_line_level
FROM batch_latest b
FULL OUTER JOIN nrt_asof_yday n
USING (custid, acctnum, mtn, acctseqlineid)
WHERE
  -- present only in NRT (as-of yesterday) → not in today's batch
  b.custid IS NULL
  -- or present in both but content differs
  OR (n.custid IS NOT NULL AND b.custid IS NOT NULL AND n.nrt_hash <> b.batch_hash);
Row 8 — Account level (custid, acctnum)
WITH nrt_asof_yday AS (
  SELECT
    custid, acctnum, mtn, acctseqlineid,
    TO_HEX(MD5(TO_JSON_STRING(STRUCT(
      plan_id, plan_name, plan_status, start_date, end_date, balance_amt, credit_limit
    )))) AS nrt_hash
  FROM `project.dataset.nrt_table`
  WHERE DATE(event_ts) < CURRENT_DATE()
),
batch_latest AS (
  SELECT
    custid, acctnum, mtn, acctseqlineid,
    TO_HEX(MD5(TO_JSON_STRING(STRUCT(
      plan_id, plan_name, plan_status, start_date, end_date, balance_amt, credit_limit
    )))) AS batch_hash
  FROM `project.dataset.batch_table`
),
line_diffs AS (
  SELECT
    COALESCE(b.custid, n.custid) AS custid,
    COALESCE(b.acctnum, n.acctnum) AS acctnum
  FROM batch_latest b
  FULL OUTER JOIN nrt_asof_yday n
  USING (custid, acctnum, mtn, acctseqlineid)
  WHERE b.custid IS NULL
     OR (n.custid IS NOT NULL AND b.custid IS NOT NULL AND n.nrt_hash <> b.batch_hash)
)
SELECT COUNT(DISTINCT FORMAT('%s|%s', custid, acctnum)) AS diff_count_acct_level
FROM line_diffs;
If your NRT also lacks a timestamp
Use partition pseudo column if available: WHERE _PARTITIONDATE < CURRENT_DATE().

If neither table has any date/partition to filter by, you cannot exclude same-day updates. The fix is to add one of:

an ingestion/load date column,

ingestion-time partitioning, or

keep daily snapshot tables (e.g., batch_table_20250825) and compare to the latest.



If you share your actual column names for the “business” fields, I’ll drop them into the query so you can run it directly.
