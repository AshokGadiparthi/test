public class BigQueryActiveJobsMonitor {

    private static final BigQuery bigQuery = BigQueryOptions.getDefaultInstance().getService();

    public static void main(String[] args) {
        // Start a thread to log the number of active running queries periodically
        new Thread(() -> {
            while (true) {
                try {
                    int runningQueriesCount = getActiveRunningQueriesCount();
                    System.out.println("Number of active running queries: " + runningQueriesCount);
                    Thread.sleep(5000); // Adjust the interval as needed
                } catch (InterruptedException e) {
                    Thread.currentThread().interrupt();
                    break;
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }).start();
    }

    private static int getActiveRunningQueriesCount() {
        int runningQueriesCount = 0;

        // List jobs in the project with a filter for running state
        Iterator<Job> jobIterator = bigQuery.listJobs(JobListOption.stateFilter(JobStatus.State.RUNNING)).iterateAll().iterator();

        while (jobIterator.hasNext()) {
            Job job = jobIterator.next();
            if (job.getStatistics() instanceof JobStatistics.QueryStatistics) {
                runningQueriesCount++;
            }
        }

        return runningQueriesCount;
    }
}
